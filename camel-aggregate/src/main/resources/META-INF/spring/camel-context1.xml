<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

<bean id="service1Processor" class="aggregate.camel.Service1Processor"/>
    <bean id="service2Processor" class="aggregate.camel.Service2Processor"/>

    <!-- Define the aggregation strategy -->
    <bean id="aggregationStrategy" class="aggregate.camel.MyAggregationStrategy"/>
    
	<camelContext
		xmlns="http://camel.apache.org/schema/spring">

		

			<!-- Define the route that receives the request from the client -->
			<route id="clientRoute">
				<!-- Receive the request from the client -->
				<from uri="direct:start" />

				<!-- Use recipientList to send the request to multiple services -->
				<recipientList>
					<simple>direct:service1,direct:service2</simple>
				</recipientList>
			</route>

			<!-- Define the route for Service 1 -->
			<route id="service1Route">
				<from uri="direct:service1" />
				<!-- Process the request for Service 1 -->
				<process ref="service1Processor" />
				<!-- Send the response back to the aggregator -->
				<to uri="direct:aggregator" />
			</route>

			<!-- Define the route for Service 2 -->
			<route id="service2Route">
				<from uri="direct:service2" />
				<!-- Process the request for Service 2 -->
				<process ref="service2Processor" />
				<!-- Send the response back to the aggregator -->
				<to uri="direct:aggregator" />
			</route>

			<!-- Define the aggregator route -->
			<route id="aggregatorRoute">
				<from uri="direct:aggregator" />
				<!-- Aggregate the responses from Service 1 and Service 2 -->
				<aggregate aggregationStrategy="aggregationStrategy"
					aggregationStrategyMethodName="aggregate" completionSize="2">
					<correlationExpression>
						<simple>${header.CamelCorrelationId}</simple>
					</correlationExpression>
					<!-- Send the aggregated response back to the client -->
					<to uri="direct:clientResponse" />
				</aggregate>
			</route>

			<!-- Define the route to send the aggregated response back to the client -->
			<route id="clientResponseRoute">
				<from uri="direct:clientResponse" />
				<!-- Send the aggregated response back to the client -->
				<to uri="direct:end" />
			</route>

		
	</camelContext>
</beans>
